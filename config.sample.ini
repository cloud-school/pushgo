# General config options to define the server.
# Please copy to config.ini
host = 0.0.0.0
port = 8080

# Max number of sockets to allow
#max_connections = 1000

# This defines what endpoint to use for updates.
pushEndpoint = http://<current_host>/update/<token>

# enable logging
# NOTE logging is currently very CPU intensive and should only be used for
# debugging
logger.enable = 0
# maximum level of logging (0=Critical...5=Info)
#logger.filter=10
# comment out to enable heka logging
heka.use = 0
#heka.sender = tcp
#heka.server_addr = 127.0.0.1
#heka.logger_name = simplepush
# define if different than the result of os.Hostname()
#heka.current_host = localhost

# Memcache data servers
#memcache.server = 127.0.0.1:11211
# Number of connections to pool per server
#memcache.pool_size = 100
# "live" records timeout in 3 days
#db.timeout_live = 259200
# "registrations" timeout in 3 hours
#db.timeout_reg = 10800
# "deleted" records time out in 1 day
#db.timeout_del = 86400
# Maximum number of channels before we send a re-registration request
#db.max_channels = 200


## Minimum time between pings
#client.min_ping_interval = 20s
## Timeout socket if not recv'd hello
#client.hello_timeout = 30s



# define this to encode the Primary Key / ChannelID combo
# this is a valid 16, 24, or 32 []byte created by crypto/rand.Read()
# This key can be generated by running go run util/genKey/main.go
# e.g.
#token_key = W8FfY9Tw9PtMSEFJF0MAkw==

# Allow cross machine update proxying.
#shard.do_proxy = 0
# FQDN of the current hostname. (Note, AWS returns an invalid value
# for hostname)
# If this is not defined, app will also query environment $HOST value.
#shard.current_host = localhost
# Default host to shard users to
#shard.default_host = localhost
#
# If you're running on Amazon, try pulling the public hostname from the
# metadata service
#shard.use_aws_host = 1
